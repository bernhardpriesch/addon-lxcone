#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2014-2015, OpenNebula Project (OpenNebula.org), C12G Labs        #
# 									     #
# Authors: Sergio Vega Gutiérrez          sergiojvg92@gmail.com		     #
#	   José Manuel de la Fé Herrero   jmdelafe92@gmail.com               #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

#source $(dirname $0)/lxcrc
source $(dirname $0)/../../scripts_common.sh

DOMAIN=$1
SOURCE=$2
TARGET=$3
#TARGET_INDEX=$4
DRV_ACTION=$5
VM_ID=$6

CEPH_AUTH=$(grep CEPH_ARGS /etc/environment | cut -d '"' -f 2)

XPATH="/var/tmp/one/datastore/xpath.rb -b $DRV_ACTION"

unset i j XPATH_ELEMENTS

DISK_XPATH="/VMM_DRIVER_ACTION_DATA/VM/TEMPLATE/DISK[ATTACH='YES']"

while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <($XPATH     /VMM_DRIVER_ACTION_DATA/VM/ID \
                    $DISK_XPATH/DRIVER \
                    $DISK_XPATH/TYPE \
                    $DISK_XPATH/READONLY \
                    $DISK_XPATH/CACHE \
                    $DISK_XPATH/DISCARD \
                    $DISK_XPATH/SOURCE \
                    $DISK_XPATH/DISK_ID \
                    $DISK_XPATH/CLONE \
                    $DISK_XPATH/CEPH_HOST \
                    $DISK_XPATH/CEPH_SECRET \
                    $DISK_XPATH/CEPH_USER \
		    $DISK_XPATH/TM_MAD \
		    $DISK_XPATH/TM)

VMID="${XPATH_ELEMENTS[j++]}"
DRIVER="${XPATH_ELEMENTS[j++]:-$DEFAULT_TYPE}"
TYPE="${XPATH_ELEMENTS[j++]}"
READONLY="${XPATH_ELEMENTS[j++]}"
CACHE="${XPATH_ELEMENTS[j++]}"
DISCARD="${XPATH_ELEMENTS[j++]}"
IMG_SRC="${XPATH_ELEMENTS[j++]}"
DISK_ID="${XPATH_ELEMENTS[j++]}"
CLONE="${XPATH_ELEMENTS[j++]}"
CEPH_HOST="${XPATH_ELEMENTS[j++]}"
CEPH_SECRET="${XPATH_ELEMENTS[j++]}"
CEPH_USER="${XPATH_ELEMENTS[j++]}"
TM_MAD="${XPATH_ELEMENTS[j++]}"

TARGET_INDEX=`echo $SOURCE | cut -d '.' -f 2`
sudo lxc-attach -n one-$VM_ID -- mkdir -p /media/$TARGET_INDEX
case $TYPE in
        FILE) SOURCE=`fix_dir_slashes $SOURCE`
		exists=$(losetup -a | grep $SOURCE | cut -d ':' -f 1)
		if [ -z $exists ]; then
			LOOP=$(sudo losetup -f --show $SOURCE);
		fi
		sudo lxc-device -n one-$VM_ID add $LOOP;
	        exec_and_log "sudo lxc-attach -n one-$VM_ID -- mount $LOOP /media/$TARGET_INDEX";
		echo "#--------------------Mounting disk $TARGET_INDEX on one-${VM_ID}--------------------#" > /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "exists=\$(losetup -a | grep $LOOP | cut -d ':' -f 1)" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "if [ -z \$exists ]; then" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "losetup $LOOP $SOURCE" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "fi" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "sudo lxc-device -n one-$VM_ID add $LOOP" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "lxc-attach -n one-$VM_ID -- mkdir -p /media/$TARGET_INDEX" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "sudo lxc-attach -n one-$VM_ID -- mount $LOOP /media/$TARGET_INDEX" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		line_number=$(grep -in "## VNC" /var/lib/lxc/one-$VM_ID/vnc | cut -d ':' -f 1)
		let line_number=line_number-1
		sed -i "$line_number r /var/lib/lxc/one-$VM_ID/vnc_tmp" /var/lib/lxc/one-$VM_ID/vnc
		rm /var/lib/lxc/one-$VM_ID/vnc_tmp
		S_HOOK=$(sed "/sudo rm -rf/i sudo losetup -d $LOOP" /var/lib/lxc/one-$VM_ID/clean)
		echo -e "$S_HOOK" > /var/lib/lxc/one-$VM_ID/clean;;
	RBD) 	if [ "${CLONE}" = "YES" ]; then
                	IMG_SRC="${IMG_SRC}-${VM_ID}-${DISK_ID}"
		fi
		IMAGE_NAME=`echo $IMG_SRC | cut -d '/' -f 2`;
		RBD_DEV=`rbd showmapped | grep -m 1 $IMAGE_NAME | awk '{print $5}'`
		if [ -z $RBD_DEV ]; then
			sudo -E rbd map $IMG_SRC
			RBD_DEV=$(rbd showmapped | grep -m 1 $IMAGE_NAME | awk '{print $5}')
		fi
		sudo lxc-device -n one-$VM_ID add $RBD_DEV;
		exec_and_log "sudo lxc-attach -n one-$VM_ID -- mount $RBD_DEV /media/$TARGET_INDEX";
		echo "#--------------------Mounting disk $TARGET_INDEX on one-${VM_ID}--------------------#" > /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "RBD_DEV=\$(rbd showmapped | grep -m 1 $IMAGE_NAME | awk '{ print \$5 }')" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "if [ -z \$RBD_DEV ]; then" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "rbd map $CEPH_AUTH $IMG_SRC" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "RBD_DEV=\$(rbd showmapped | grep -m 1 $IMAGE_NAME | awk '{print \$5}')" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "fi" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "sudo lxc-device -n one-$VM_ID add \$RBD_DEV" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "lxc-attach -n one-$VM_ID -- mkdir -p /media/$TARGET_INDEX" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "sudo lxc-attach -n one-$VM_ID -- mount \$RBD_DEV /media/$TARGET_INDEX" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		line_number=$(grep -in "## VNC" /var/lib/lxc/one-$VM_ID/vnc | cut -d ':' -f 1)
		let line_number=line_number-1
		sed -i "$line_number r /var/lib/lxc/one-$VM_ID/vnc_tmp" /var/lib/lxc/one-$VM_ID/vnc
		rm /var/lib/lxc/one-$VM_ID/vnc_tmp
		S_HOOK=$(sed "/sudo rm -rf/i sudo rbd unmap ${RBD_DEV}" /var/lib/lxc/one-$VM_ID/clean)
                echo -e "$S_HOOK" > /var/lib/lxc/one-$VM_ID/clean;;
	BLOCK)  if [ "${TM_MAD}" = "lvm" ]; then
			LV_SOURCE=$(echo $IMG_SRC | cut -d ':' -f 2 | cut -d '.' -f 2)
                        VG_SOURCE=$(echo $IMG_SRC | cut -d ':' -f 2 | cut -d '.' -f 1)
                        MOUNT_BLOCK=/dev/${VG_SOURCE}/${LV_SOURCE}
                else
                        MOUNT_BLOCK=/dev/vg-one-103/lv-one-${VM_ID}-${DISK_ID}
                fi
		sudo lxc-device -n one-$VM_ID add ${MOUNT_BLOCK}
                exec_and_log "sudo lxc-attach -n one-$VM_ID -- mount ${MOUNT_BLOCK} /media/${DISK_ID}"
		echo "#--------------------Mounting disk $TARGET_INDEX on one-${VM_ID}--------------------#" > /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "lxc-device -n one-$VM_ID add ${MOUNT_BLOCK}" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		echo "lxc-attach -n one-$VM_ID -- mkdir -p /media/$TARGET_INDEX" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
                echo "lxc-attach -n one-$VM_ID -- mount ${MOUNT_BLOCK} /media/${TARGET_INDEX}" >> /var/lib/lxc/one-$VM_ID/vnc_tmp
		line_number=$(grep -in "## VNC" /var/lib/lxc/one-$VM_ID/vnc | cut -d ':' -f 1)
		let line_number=line_number-1
		sed -i "$line_number r /var/lib/lxc/one-$VM_ID/vnc_tmp" /var/lib/lxc/one-$VM_ID/vnc
		rm /var/lib/lxc/one-$VM_ID/vnc_tmp;;
esac




